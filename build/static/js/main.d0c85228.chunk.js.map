{"version":3,"sources":["components/ContactForm/ContactForm.module.css","components/ContactList/ContactList.module.css","components/Filter/Filter.module.css","components/redux/contact/contact-selector.js","components/redux/contact/contact-types.js","components/ContactForm/ContactForm.js","components/redux/contact/contact-action.js","components/Filter/Filter.js","components/ContactList/ContactList.js","App.js","components/redux/contact/contact-reduce.js","components/redux/store.js","index.js"],"names":["module","exports","getContact","state","contacts","contact","getFilter","filter","getVisibleContact","normalizedFilter","toLowerCase","text","name","includes","getFilteredContact","axios","defaults","baseURL","fetchContact","createAsyncThunk","_","a","rejectWithValue","get","data","addContact","number","post","deleteContact","contactId","delete","ContactForm","useState","setName","setNumber","useSelector","dispatch","useDispatch","handleChange","target","value","reset","onSubmit","event","preventDefault","find","alert","className","styles","itemForm","itemBlock","label","Input","type","placeholder","onChange","itemInput","Button","color","button","disabled","actions","changeFilter","createAction","Filter","itemFilter","itemTextFilter","itemElement","ContactList","useEffect","length","map","id","item__contact","item__text","item__button","onClick","onDeleteContact","App","style","textAlign","bigText","createReducer","fulfilled","payload","error","rejected","pending","isLoading","combineReducers","middleware","getDefaultMiddleware","serializableCheck","ignoreActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","persistConfig","key","storage","blacklist","rootReducer","contactReducer","persistedReducer","persistReducer","store","configureStore","reducer","devTools","process","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d0c85228.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"ContactForm_label__378f8\",\"input\":\"ContactForm_input__gm87B\",\"itemForm\":\"ContactForm_itemForm__E58BF\",\"itemInput\":\"ContactForm_itemInput__2wqEf\",\"itemBlock\":\"ContactForm_itemBlock__ozs_K\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item__contact\":\"ContactList_item__contact__2MFwC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"itemFilter\":\"Filter_itemFilter__l9hXF\",\"itemElement\":\"Filter_itemElement__3si-S\",\"itemTextFilter\":\"Filter_itemTextFilter__sUsO3\"};","export const getContact = state => state.contacts.contact;\nexport const getFilter = state => state.contacts.filter;\n\nexport const getVisibleContact = state => {\n    const contacts = getContact(state);\n    const filter = getFilter(state);\n\n    const getFilteredContact = contacts => {\n        const normalizedFilter = filter.toLowerCase();\n        return contacts.filter(text =>\n            text.name.toLowerCase().includes(normalizedFilter),    \n        );\n    };\n\n    return getFilteredContact(contacts);\n};","// export const ADD = 'contact/addContact';\n// export const DELETE = 'contact/deleteContact';\n// export const CHANGE_FILTER = 'contact/changeFilter';\n\nimport axios from \"axios\";\nimport { createAsyncThunk } from \"@reduxjs/toolkit\";\n// import { existsTypeAnnotation } from \"@babel/types\";\n\naxios.defaults.baseURL = 'http://localhost:4040';\n\nexport const fetchContact = createAsyncThunk(\n    'contact/fetchContact',\n    async (_, { rejectWithValue }) => {\n        try {\n            const { data } = await axios.get(`/contact`);\n            return data;\n        } catch (error) {\n            return rejectWithValue(error);\n        }\n    },\n);\n\nexport const addContact = createAsyncThunk(\n    'contact/addContact',\n    async (data, { rejectWithValue }) => {\n        const contact = { name: data, number: data };\n        try {\n            const { data } = await axios.post(`/contact`, contact);\n            return data;\n        } catch (error) {\n            return rejectWithValue(error);\n        }\n    },\n);\n\nexport const deleteContact = createAsyncThunk(\n    'contac/deleteContact',\n    async (contactId, { rejectWithValue }) => {\n        try {\n            await axios.delete(`/contact/${contactId}`);\n            return contactId;\n        } catch (error) {\n            return rejectWithValue(error);\n        }\n    },\n);","import { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getContact } from '../redux/contact/contact-selector';\n// import { addContact } from '../redux/contact/contact-action';\nimport { addContact } from 'components/redux/contact/contact-types';\n\nimport styles from './ContactForm.module.css';\nimport { Input } from '@material-ui/core';\nimport { Button } from '@material-ui/core';\n\n\nfunction ContactForm() {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n  const contacts = useSelector(getContact);\n  const dispatch = useDispatch();\n\n  const handleChange = ({ target }) => {\n    const { name, value } = target;\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'number':\n        setNumber(value);\n        break;\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    const auditContact = contacts.find(\n      contact => contact.name.toLowerCase() === name.toLowerCase(),\n    );\n    if (auditContact) {\n      alert(`Контакт ${name} з таким іменем вже існує.`);\n      reset();\n      return;\n    }\n    dispatch(addContact(name, number));\n    reset();\n  };\n\n  const reset = () => {\n    setName('');\n    setNumber('');\n  };\n\n\n  return (\n    <form onSubmit={handleSubmit} className={styles.itemForm}>\n      <div className={styles.itemBlock}>\n        <label className={styles.label}>\n          Ім'я:\n            <Input\n              type=\"text\"\n              name=\"name\"\n              value={name}\n              placeholder=\"Jack Sparrow\"\n              onChange={handleChange}\n              className={styles.itemInput}\n            />\n        </label>\n\n        <label className={styles.label}>\n          Номер:\n            <Input\n              type=\"tel\"\n              name=\"number\"\n              value={number}\n              placeholder=\"111-11-11\"\n              onChange={handleChange}\n              className={styles.itemInput}\n            />\n        </label>\n      </div>\n\n      <Button type=\"submit\" color=\"primary\" className={styles.button} disabled={name === '' || number === ''}>\n        Додати контакт\n      </Button>\n    </form>\n  );\n}\n  \nexport default ContactForm;","// import { v4 as uniqueId } from 'uuid';\nimport { createAction } from '@reduxjs/toolkit';\n\nconst changeFilter = createAction('contact/changeFilter');\n\nconst actions = {\n    changeFilter,\n};\n\nexport default actions;\n\n\n// export const addContact = createAction(\n//     'contact/addContact',\n//     function prepare(name, number) {\n//         return {\n//             payload: {\n//                 id: uniqueId(),\n//                 name,\n//                 number,\n//             },\n//         };\n//     },\n// );\n\n// export const deleteContact = createAction('contact/deleteContact');\n// export const changeFilter = createAction('contact/changeFilter');","import { useDispatch, useSelector } from \"react-redux\";\n// import { changeFilter } from \"components/redux/contact/contact-action\";\nimport { getFilter } from \"components/redux/contact/contact-selector\";\nimport actions from \"components/redux/contact/contact-action\";\n\nimport styles from './Filter.module.css';\n// import { getFilter } from \"components/redux/contact/contact-selector\";\nimport { Input } from '@material-ui/core';\n\n\nfunction Filter() {\n  const value = useSelector(getFilter);\n  const dispatch = useDispatch();\n\n  return (\n    <label className={styles.itemFilter}>\n      <p className={styles.itemTextFilter}>Поиск контактов</p>\n      <Input\n        className={styles.itemElement}\n        type=\"text\"\n        value={value}\n        onChange={event => dispatch(actions.changeFilter(event.target.value))}\n      />\n    </label>\n  );\n}\n\nexport default Filter;","import PropTypes from 'prop-types';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { deleteContact, fetchContact } from '../redux/contact/contact-types';\nimport { getVisibleContact } from '../redux/contact/contact-selector';\n\nimport styles from './ContactList.module.css';\nimport { Button } from '@material-ui/core';\nimport { useEffect } from 'react';\n\n\nfunction ContactList () {\n  const contacts = useSelector(getVisibleContact);\n  const dispatch = useDispatch();\n\n  const onDeleteContact = id => dispatch(deleteContact(id));\n\n  useEffect(() => {\n    dispatch(fetchContact());\n    // eslint-disable-next-line\n  }, []);\n\n  return (\n    <>\n      {!contacts.length && <div>Немає жодного контакту</div>}\n      <ul>\n        {contacts.map(({ id, name, number }) => (\n          <li key={id} className={styles.item__contact}>\n            <p className={styles.item__text}>{name}</p>\n            <p className={styles.item__text}>{number}</p>\n            <Button\n              className={styles.item__button}\n              onClick={() => onDeleteContact(id)}\n              color=\"secondary\"\n            >\n              Видалити\n            </Button>\n          </li>\n        ))}\n      </ul>\n    </>\n  );\n}\n\nContactList.propTypes = {\n  contacts: PropTypes.arrayOf(PropTypes.object),\n};\n  \nexport default ContactList;","import ContactForm from 'components/ContactForm/ContactForm';\nimport Filter from 'components/Filter/Filter';\nimport ContactList from 'components/ContactList/ContactList';\nimport styles from './App.css';\n\n\nfunction App() {\n  \n  return (\n    <div style={{textAlign: \"center\"}}>\n      <h1 className={styles.bigText}>Phonebook</h1>\n      <ContactForm />\n      <h2 className={styles.text}>Contacts</h2>\n      <Filter />\n      <ContactList />\n    </div>\n  );\n}\n\nexport default App;","import { combineReducers } from \"redux\";\n// import { addContact, deleteContact, changeFilter } from \"./contact-action\";\nimport { createReducer } from \"@reduxjs/toolkit\";\nimport actions from \"./contact-action\";\nimport { fetchContact, addContact, deleteContact } from './contact-types';\n\n\n// const contactTest = [\n//     { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n//     { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n//     { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n//     { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n// ];\n\nconst contact = createReducer([], {\n    [fetchContact.fulfilled]: (_, { payload }) => payload,\n    [addContact.fulfilled]: (state, { payload }) => [...state, payload],\n    [deleteContact.fulfilled]: (state, { payload }) => state.filter(contact => contact.id !== payload),\n});\n// const contact = createReducer(contactTest, {\n//     [addContact]: (state, { payload }) => [...state, payload],\n//     [deleteContact]: (state, { payload }) => \n//         state.filter(contact => contact.id !== payload),\n// });\n\nconst filter = createReducer('', {\n    // [changeFilter]: (_, { payload }) => payload,\n    [actions.changeFilter]: (_, { payload }) => payload,\n});\n\nconst error = createReducer(null, {\n    [fetchContact.rejected]: (_, { payload }) => payload,\n    [fetchContact.pending]: () => null,\n});\n\nconst isLoading = createReducer(false, {\n    [fetchContact.pending]: () => true,\n    [fetchContact.fulfilled]: () => false,\n    [fetchContact.rejected]: () => false,\n    [addContact.pending]: () => true,\n    [addContact.fulfilled]: () => false,\n    [addContact.rejected]: () => false,\n    [deleteContact.pending]: () => true,\n    [deleteContact.fulfilled]: () => false,\n    [deleteContact.rejected]: () => false,\n});\n\n\n\n\nexport default combineReducers({\n    contact,\n    filter,\n    error,\n    isLoading,\n});","import contactReducer from \"./contact/contact-reduce\";\nimport { \n    configureStore, \n    getDefaultMiddleware, \n    combineReducers, \n} from '@reduxjs/toolkit';\nimport {\n    // persistStore,\n    persistReducer,\n    FLUSH,\n    REHYDRATE,\n    PAUSE,\n    PERSIST,\n    PURGE,\n    REGISTER,\n} from 'redux-persist';\n\nimport logger from 'redux-logger';\nimport storage from 'redux-persist/lib/storage';\n\nconst middleware = [\n    ...getDefaultMiddleware({\n        serializableCheck: {\n            ignoreActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n        },\n    }),\n    logger,\n];\n\nconst persistConfig = {\n    key: 'root',\n    storage,\n    blacklist: ['filter'],\n};\n\nconst rootReducer =  combineReducers({ contacts: contactReducer });\n\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\n\nexport const store = configureStore({\n    reducer: persistedReducer,\n    devTools: process.env.NODE_ENV === 'development',\n    middleware,\n});\n\n// export const persistor = persistStore(store);","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport 'index.css';\nimport { Provider } from 'react-redux';\nimport { store } from './components/redux/store';\n\n// import { store, persistor } from './components/redux/store';\n// import { PersistGate } from 'redux-persist/integration/react';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      {/* <PersistGate loading={null} persistor={persistor}> */}\n        <App />\n      {/* </PersistGate> */}\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);"],"sourceRoot":""}